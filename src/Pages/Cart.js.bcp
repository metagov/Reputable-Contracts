import { Button } from "bootstrap";
import React, { useState } from "react";
import { Link } from "react-router-dom";
import { Form } from "react-bootstrap";
import { useCart } from "react-use-cart";
//import Alert from "react-bootstrap/Alert";

const Cart = () => {
  const {
    isEmpty,
    totalUniqueItems,
    items,
    cartTotal,
    updateItemQuantity,
    removeItem,
    emptyCart,
  } = useCart();
  const [show, setShow] = useState(false);
  const email = "Test@gmail.com";
  const userID = "";
  const userName = "";
  //const feedbackList = [];

  const buyItems = () => {
    console.log("Item buy button clicked");
    items.map((item, index) => {
      console.log("Unique seller id: " + item.sellerID);
      // feedbackList.push(item.sellerID);
    });
    setShow(true);
  };
  const random = require("simple-random-number-generator");
  let params = {
    min: 4000000,
    max: 5000000,
  };
  const emptyCartandShowAlert = () => {
    setShow(false);
    emptyCart();
  };
  if (isEmpty)
    return (
      <h1 className="text-Center row justify-content-center">
        Your Cart is Empty
      </h1>
    );
  if (show)
    return (
      <div
        class="text-Center row justify-content-center alert alert-warning alert-dismissible fade show"
        role="alert"
      >
        <h2 className="text-Center row justify-content-center">
          Successful! Your order is confirmed.
        </h2>
        <h4 className="text-Center row justify-content-center">
          Use the links below to give feedbacks to the sellers
          {items.map((item, index) => {
            return (
              <a>
                <Link
                  // target="_blank"
                  className="text-Center row justify-content-center fs-6 font-weight-light"
                  to={{
                    pathname: `feedback/4345/${item.sellerID}/${random(
                      params
                    ).toFixed(0)}/1/`,
                    state: { fromDashboard: item.companyName },
                  }}
                  target="_blank"
                >
                  <h4 className="text-Center row justify-content-center">
                    {item.companyName} : {item.title}
                  </h4>
                </Link>
              </a>
            );
          })}
        </h4>
        <h8 className="text-Center row justify-content-center">
          {" "}
          Once your items are ready to go, we’ll let you know when they’re
          headed your way.
        </h8>

        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="alert"
          aria-label="Close"
          onClick={() => emptyCartandShowAlert()}
        ></button>
      </div>
    );

  return (
    <section className="py-4 container">
      <form action="http://localhost:3000/" method="GET">
        <div className="row justify-content-center">
          <div className="col-12"></div>
          <h5>Your Cart has {totalUniqueItems} Items</h5>
          <table className="table table-light table-hover m-0">
            <tbody>
              {items.map((item, index) => {
                return (
                  <tr key={index}>
                    <td>
                      <img src={item.img} style={{ height: "6rem" }} alt="" />
                    </td>
                    <td>{item.title}</td>
                    <td>£{item.price}</td>
                    <td>Quantity: ({item.quantity}) </td>

                    <td>
                      <button
                        className="btn btn-info ms-2"
                        onClick={() =>
                          updateItemQuantity(item.id, item.quantity - 1)
                        }
                      >
                        -
                      </button>
                      <button
                        className="btn btn-info ms-2"
                        onClick={() =>
                          updateItemQuantity(item.id, item.quantity + 1)
                        }
                      >
                        +
                      </button>
                      <button
                        className="btn btn-danger ms-2"
                        onClick={() => removeItem(item.id)}
                      >
                        Remove Item
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
        <div className="col-auto ms-auto flexBox">
          <h2>Total: £{cartTotal.toFixed(2)}</h2>
        </div>
        <div className="col-auto">
          <button className="btn btn-danger m-2" onClick={() => emptyCart()}>
            Remove All Items
          </button>
          <button className="btn btn-success m-2" onClick={() => buyItems()}>
            Buy Now
          </button>
        </div>
      </form>
    </section>
  );
};
export default Cart;
