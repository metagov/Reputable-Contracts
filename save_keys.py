# -*- coding: utf-8 -*-
"""
Created on Tue Oct  5 02:05:16 2021

@author: prince
"""
import json
import phe
from phe import paillier
#1 SETS THE KEYS AND STORES THEM
def enc():
    #encrypt 5 values 2 00s
    js = {}
    js['a'] = pub.encrypt(1).ciphertext()
    js['b'] = pub.encrypt(1).ciphertext()
    js['c'] = pub.encrypt(1).ciphertext()
    js['d'] = pub.encrypt(0).ciphertext()
    js['e'] = pub.encrypt(0).ciphertext()
    jsj = json.dumps(js)
    #write to file
    with open("encrypted.json", "w") as f:
        f.write(jsj + "\n")
    

pub, priv = paillier.generate_paillier_keypair(n_length=256)
#recoup the keys, aggregate and decrypt the final key.
def keypair_dump_jwk(pub, priv, date=None):
    """Serializer for public-private keypair, to JWK format."""
    from datetime import datetime
    if date is None:
        date = datetime.now().strftime('%Y-%m-%dT%H:%M:%S')

    rec_pub = {
        'kty': 'DAJ',
        'alg': 'PAI-GN1',
        'key_ops': ['encrypt'],
        'n': phe.util.int_to_base64(pub.n),
        'kid': 'Paillier public key generated by phe on {}'.format(date)
    }

    rec_priv = {
        'kty': 'DAJ',
        'key_ops': ['decrypt'],
        'p': phe.util.int_to_base64(priv.p),
        'q': phe.util.int_to_base64(priv.q),
        'kid': 'Paillier private key generated by phe on {}'.format(date)
    }

    priv_jwk = json.dumps(rec_priv)
    pub_jwk = json.dumps(rec_pub)
    return pub_jwk, priv_jwk

#save keys into json then save to a file

pub_key, priv_key = keypair_dump_jwk(pub, priv)

with open("phe_key.pub", "w") as f:
    f.write(pub_key + "\n")
    
with open("phe_private_key.priv", "w") as f:
    f.write(priv_key + "\n")

enc()